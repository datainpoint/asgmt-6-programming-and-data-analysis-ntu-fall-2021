import unittest
import os
import ipynb.fs.full.exercises as ex
import numpy as np
import pandas as pd

class TestAssignmentSix(unittest.TestCase):
    def test_01_list_folder_files(self):
        folder_files = ex.list_folder_files()
        self.assertIsInstance(folder_files, list)
        self.assertEqual(len(folder_files), 22)
        self.assertTrue('表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls' in folder_files)
        self.assertTrue('表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls' in folder_files)
        self.assertTrue('表5-臺中市-全國性公民投票得票數一覽表(投開票所).xls' in folder_files)
        self.assertTrue('表5-新北市-全國性公民投票得票數一覽表(投開票所).xls' in folder_files)
        self.assertTrue('表5-桃園市-全國性公民投票得票數一覽表(投開票所).xls' in folder_files)
        self.assertTrue('表5-高雄市-全國性公民投票得票數一覽表(投開票所).xls' in folder_files)
    def test_02_list_worksheets(self):
        work_sheets = ex.list_worksheets("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls")
        self.assertIsInstance(work_sheets, list)
        self.assertEqual(len(work_sheets), 4)
        self.assertIsInstance(work_sheets[0], str)
        self.assertIsInstance(work_sheets[1], str)
        self.assertIsInstance(work_sheets[2], str)
        self.assertIsInstance(work_sheets[3], str)
        work_sheets = ex.list_worksheets("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls")
        self.assertIsInstance(work_sheets, list)
        self.assertEqual(len(work_sheets), 4)
        self.assertIsInstance(work_sheets[0], str)
        self.assertIsInstance(work_sheets[1], str)
        self.assertIsInstance(work_sheets[2], str)
        self.assertIsInstance(work_sheets[3], str)
    def test_03_import_single_worksheet(self):
        single_worksheet = ex.import_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 0)
        self.assertIsInstance(single_worksheet, pd.core.frame.DataFrame)
        self.assertEqual(single_worksheet.shape, (1762, 13))
        single_worksheet = ex.import_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 1)
        self.assertIsInstance(single_worksheet, pd.core.frame.DataFrame)
        self.assertEqual(single_worksheet.shape, (1762, 13))
        single_worksheet = ex.import_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 2)
        self.assertIsInstance(single_worksheet, pd.core.frame.DataFrame)
        self.assertEqual(single_worksheet.shape, (1762, 13))
        single_worksheet = ex.import_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 3)
        self.assertIsInstance(single_worksheet, pd.core.frame.DataFrame)
        self.assertEqual(single_worksheet.shape, (1762, 13))
        single_worksheet = ex.import_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 0)
        self.assertIsInstance(single_worksheet, pd.core.frame.DataFrame)
        self.assertEqual(single_worksheet.shape, (1578, 13))
        single_worksheet = ex.import_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 1)
        self.assertIsInstance(single_worksheet, pd.core.frame.DataFrame)
        self.assertEqual(single_worksheet.shape, (1578, 13))
        single_worksheet = ex.import_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 2)
        self.assertIsInstance(single_worksheet, pd.core.frame.DataFrame)
        self.assertEqual(single_worksheet.shape, (1578, 13))
        single_worksheet = ex.import_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 3)
        self.assertIsInstance(single_worksheet, pd.core.frame.DataFrame)
        self.assertEqual(single_worksheet.shape, (1578, 13))
    def test_04_import_all_worksheets(self):
        all_worksheets = ex.import_all_worksheets("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls")
        self.assertIsInstance(all_worksheets, dict)
        self.assertIn('case17', all_worksheets.keys())
        self.assertIn('case18', all_worksheets.keys())
        self.assertIn('case19', all_worksheets.keys())
        self.assertIn('case20', all_worksheets.keys())
        self.assertIsInstance(all_worksheets["case17"], pd.core.frame.DataFrame)
        self.assertIsInstance(all_worksheets["case18"], pd.core.frame.DataFrame)
        self.assertIsInstance(all_worksheets["case19"], pd.core.frame.DataFrame)
        self.assertIsInstance(all_worksheets["case20"], pd.core.frame.DataFrame)
        all_worksheets = ex.import_all_worksheets("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls")
        self.assertIsInstance(all_worksheets, dict)
        self.assertIn('case17', all_worksheets.keys())
        self.assertIn('case18', all_worksheets.keys())
        self.assertIn('case19', all_worksheets.keys())
        self.assertIn('case20', all_worksheets.keys())
        self.assertIsInstance(all_worksheets["case17"], pd.core.frame.DataFrame)
        self.assertIsInstance(all_worksheets["case18"], pd.core.frame.DataFrame)
        self.assertIsInstance(all_worksheets["case19"], pd.core.frame.DataFrame)
        self.assertIsInstance(all_worksheets["case20"], pd.core.frame.DataFrame)
    def test_05_tidy_single_worksheet(self):
        tidy_dataframe = ex.tidy_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 0)
        self.assertIsInstance(tidy_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(tidy_dataframe.shape, (1745, 5))
        tidy_dataframe = ex.tidy_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 1)
        self.assertIsInstance(tidy_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(tidy_dataframe.shape, (1745, 5))
        tidy_dataframe = ex.tidy_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 2)
        self.assertIsInstance(tidy_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(tidy_dataframe.shape, (1745, 5))
        tidy_dataframe = ex.tidy_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 3)
        self.assertIsInstance(tidy_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(tidy_dataframe.shape, (1745, 5))
        tidy_dataframe = ex.tidy_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 0)
        self.assertIsInstance(tidy_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(tidy_dataframe.shape, (1536, 5))
        tidy_dataframe = ex.tidy_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 1)
        self.assertIsInstance(tidy_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(tidy_dataframe.shape, (1536, 5))
        tidy_dataframe = ex.tidy_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 2)
        self.assertIsInstance(tidy_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(tidy_dataframe.shape, (1536, 5))
        tidy_dataframe = ex.tidy_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 3)
        self.assertIsInstance(tidy_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(tidy_dataframe.shape, (1536, 5))
    def test_06_melt_single_worksheet(self):
        melted_dataframe = ex.melt_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 0)
        self.assertIsInstance(melted_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(melted_dataframe.shape, (3490, 6))
        self.assertEqual(melted_dataframe["case"].unique()[0], 17)
        self.assertEqual(melted_dataframe["variable"].nunique(), 2)
        melted_dataframe = ex.melt_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 1)
        self.assertIsInstance(melted_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(melted_dataframe.shape, (3490, 6))
        self.assertEqual(melted_dataframe["case"].unique()[0], 18)
        self.assertEqual(melted_dataframe["variable"].nunique(), 2)
        melted_dataframe = ex.melt_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 2)
        self.assertIsInstance(melted_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(melted_dataframe.shape, (3490, 6))
        self.assertEqual(melted_dataframe["case"].unique()[0], 19)
        self.assertEqual(melted_dataframe["variable"].nunique(), 2)
        melted_dataframe = ex.melt_single_worksheet("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls", 3)
        self.assertIsInstance(melted_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(melted_dataframe.shape, (3490, 6))
        self.assertEqual(melted_dataframe["case"].unique()[0], 20)
        self.assertEqual(melted_dataframe["variable"].nunique(), 2)
        melted_dataframe = ex.melt_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 0)
        self.assertIsInstance(melted_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(melted_dataframe.shape, (3072, 6))
        self.assertEqual(melted_dataframe["case"].unique()[0], 17)
        self.assertEqual(melted_dataframe["variable"].nunique(), 2)
        melted_dataframe = ex.melt_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 1)
        self.assertIsInstance(melted_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(melted_dataframe.shape, (3072, 6))
        self.assertEqual(melted_dataframe["case"].unique()[0], 18)
        self.assertEqual(melted_dataframe["variable"].nunique(), 2)
        melted_dataframe = ex.melt_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 2)
        self.assertIsInstance(melted_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(melted_dataframe.shape, (3072, 6))
        self.assertEqual(melted_dataframe["case"].unique()[0], 19)
        self.assertEqual(melted_dataframe["variable"].nunique(), 2)
        melted_dataframe = ex.melt_single_worksheet("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls", 3)
        self.assertIsInstance(melted_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(melted_dataframe.shape, (3072, 6))
        self.assertEqual(melted_dataframe["case"].unique()[0], 20)
        self.assertEqual(melted_dataframe["variable"].nunique(), 2)
    def test_07_melt_tidy_all_worksheets(self):
        melted_tidy_dataframe = ex.melt_tidy_all_worksheets("表5-臺北市-全國性公民投票得票數一覽表(投開票所).xls")
        self.assertIsInstance(melted_tidy_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(melted_tidy_dataframe.shape, (13960, 7))
        self.assertEqual(melted_tidy_dataframe["case"].nunique(), 4)
        self.assertEqual(melted_tidy_dataframe["variable"].nunique(), 2)
        melted_tidy_dataframe = ex.melt_tidy_all_worksheets("表5-臺南市-全國性公民投票得票數一覽表(投開票所).xls")
        self.assertIsInstance(melted_tidy_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(melted_tidy_dataframe.shape, (12288, 7))
        self.assertEqual(melted_tidy_dataframe["case"].nunique(), 4)
        self.assertEqual(melted_tidy_dataframe["variable"].nunique(), 2)
    def test_08_melt_tidy_all_workbooks(self):
        referendum_dataframe = ex.melt_tidy_all_workbooks()
        self.assertIsInstance(referendum_dataframe, pd.core.frame.DataFrame)
        self.assertEqual(referendum_dataframe.shape, (139832, 7))
        self.assertEqual(referendum_dataframe["county"].nunique(), 22)
        self.assertEqual(referendum_dataframe["case"].nunique(), 4)
        self.assertEqual(referendum_dataframe["variable"].nunique(), 2)
    def test_09_summarize_by_case(self):
        case_summary = ex.summarize_by_case()
        self.assertIsInstance(case_summary, pd.core.frame.DataFrame)
        self.assertEqual(case_summary.shape, (8, 3))
        self.assertEqual(case_summary["case"].nunique(), 4)
        self.assertEqual(case_summary["variable"].nunique(), 2)
    def test_10_summarize_by_county_and_case(self):
        county_case_summary = ex.summarize_by_county_and_case()
        self.assertEqual(county_case_summary.shape, (176, 5))
        self.assertEqual(county_case_summary["county"].nunique(), 22)
        self.assertEqual(county_case_summary["case"].nunique(), 4)
        self.assertEqual(county_case_summary["variable"].nunique(), 2)

suite = unittest.TestLoader().loadTestsFromTestCase(TestAssignmentSix)
runner = unittest.TextTestRunner(verbosity=2)
if __name__ == '__main__':
    test_results = runner.run(suite)
number_of_failures = len(test_results.failures)
number_of_errors = len(test_results.errors)
number_of_test_runs = test_results.testsRun
number_of_successes = number_of_test_runs - (number_of_failures + number_of_errors)
print("You've got {} successes among {} questions.".format(number_of_successes, number_of_test_runs))